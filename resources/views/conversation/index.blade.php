@extends('layouts.app')

@section('content')
<style>
    :root {
        --primary-blue: #3498db;
        --primary-green: #2ecc71;
        --primary-orange: #f39c12;
        --light-bg: #ecf0f1;
    }
    body {
        background-color: var(--light-bg);
    }
    .dashboard-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 15px;
    }
    .login-section {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        justify-content: space-between;
        align-items: stretch;
        margin-bottom: 2rem;
    }
    .login-content {
        flex: 1;
        min-width: 300px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    .card-style {
        background-color: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .oasis-container {
        position: relative;
        width: 200px;
        height: 200px;
        margin-bottom: 0.5rem;
    }
    .oasis-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        transition: opacity 0.5s ease-in-out;
    }
    .oasis-image.hidden {
        opacity: 0;
    }
    .points-display{
        font-size: 1rem;
        font-weight: bold;
        color: var(--primary-orange);
        margin-bottom: 1rem;
    }
    .streak-display{
        font-size: 1rem;
        font-weight: bold;
        color: var(--primary-orange);
        margin-bottom: 1rem;
        background-color: rgba(255, 255, 255, 0.6); /* ÂçäÈÄèÊòé„ÅÆÁôΩËâ≤ */
        border-radius: 15px;
        padding: 1rem;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1); /* „Åµ„Çè„Åµ„Çè„Åï„Åõ„ÇãÂΩ± */
        margin-bottom: 1rem; /* ÈÅ©ÂÆúË™øÊï¥ */
    }
    .points-display span, .streak-display span{
        display: block;
        font-size: 2rem;
    }
    .points-display small, .streak-display small{
        font-size: 1rem;
    }
    .login-bonus-button {
        background: linear-gradient(45deg, var(--primary-orange), var(--primary-green));
        border: none;
        color: white;
        font-weight: bold;
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        border-radius: 50px;
        transition: all 0.3s ease;
    }
    .login-bonus-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 7px 14px rgba(50, 50, 93, .1), 0 3px 6px rgba(0, 0, 0, .08);
    }
    .talk-button {
        width: 200px;
        height: 200px;
        border-radius: 50%;
        background: linear-gradient(45deg, var(--primary-blue), var(--primary-green));
        border: none;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
    }
    .talk-button:hover {
        transform: scale(1.1);
        box-shadow: 0 10px 20px rgba(0,0,0,0.2);
    }
    .conversations-section {
        width: 100%;
    }
    .conversations-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        justify-content: center;
    }
    .card {
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border: none;
    }
    .card-body {
        display: flex;
        flex-direction: column;
        padding: 1.5rem;
    }
    .card-body {
        padding: 1.25rem;
    }
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0,0,0,0.15);
    }
    .card-title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 0.75rem;
        color: var(--primary-green);
    }
    .title-container {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    .card-text{
        margin-bottom: 0.5rem;
    }
    .card-actions{
        margin-top: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }
    .edit-button, .delete-button {
        background: none;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
        transition: transform 0.3s ease;
    }
    .edit-button:hover, .delete-button:hover {
        transform: scale(1.2);
    }
    .badge {
        font-size: 0.8rem;
        border-radius: 50px;
        padding: 0.3em 0.6em;
    }
    .btn {
        padding: 0.5rem 1rem;
    }
    h1, h2 {
        color: var(--primary-blue);
    }
    @media (min-width: 768px) {
        .login-section {
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: space-around;
        }

        .oasis-container, .talk-button-container, .login-bonus-container {
            width: calc(50% - 1rem);
        }
    }

    @media (min-width: 992px) {
        .login-section {
            flex-wrap: nowrap;
        }
        .login-content {
            flex-basis: calc(33.333% - 1.33rem);  /* 3„Å§„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÂùáÁ≠â„Å´ÈÖçÁΩÆ */
            max-width: calc(33.333% - 1.33rem);
        }
    }
    @media (max-width: 992px) {
        .login-section {
            flex-direction: column;
        }
        .login-content {
            width: 100%;
        }
    }
</style>

<div class="dashboard-container">
    <div class="login-section">
        <div class="login-content">
            <div class="oasis-container">
                <img src='{{ asset('storage/oasis-level1.png') }}' alt="Oasis Level 1" class="oasis-image" id="oasis-level1">
                <img src='{{ asset('storage/oasis-level2.png') }}' alt="Oasis Level 2" class="oasis-image hidden" id="oasis-level2">
                <img src='{{ asset('storage/oasis-level3.png') }}' alt="Oasis Level 3" class="oasis-image hidden" id="oasis-level3">
                <img src='{{ asset('storage/oasis-level4.png') }}' alt="Oasis Level 4" class="oasis-image hidden" id="oasis-level4">
            </div>
            <div class="points-display">
                Á¥ØË®à„Éù„Ç§„É≥„ÉàÔºö
                <span style="display: flex; align-items: center; justify-content: center;">
                    <span style="font-size: 2rem;">{{ $user->points ?? 0 }}</span><small style="font-size: 1rem; margin-left: 0.2rem;">pt</small>
                </span>
            </div>
            <button id="loginBonusBtn" class="login-bonus-button">„É≠„Ç∞„Ç§„É≥„Éú„Éº„Éä„Çπ„ÇíÁç≤Âæó</button>
        </div>
        <div class="login-content">
            <a href="{{ route('conversations.start') }}" class="talk-button">
                Ë©±„Åó„Åã„Åë„Çã
            </a>
        </div>
        <div class="login-content">
            <div class="streak-display">
                ÈÄ£Á∂ö„É≠„Ç∞„Ç§„É≥Êó•Êï∞Ôºö
                <span style="display: flex; align-items: center; justify-content: center;">
                    <span style="font-size: 2rem;">{{ $user->login_streak ?? 0 }}</span><small style="font-size: 1rem; margin-left: 0.2rem;">Êó•</small>
                </span>
            </div>
        </div>
    </div>
    <div class="conversations-section">
        <h2 class="text-center mb-4">„Åì„Çå„Åæ„Åß„ÅÆÂØæË©±</h2>
        <div class="conversations-grid">
            @foreach($conversations as $conversation)
                <div class="card">
                    <div class="card-body">
                        <div class="card-title">
                            <div class="title-container">
                                <h5 id="title-{{ $conversation->id }}">
                                    @php
                                        $summaryMessage = $conversation->messages()->where('summary', true)->first();
                                        $title = '';
                                        if ($summaryMessage) {
                                            preg_match('/„Çø„Ç§„Éà„É´Ôºö(.+?)(?=\s*Ë¶ÅÁ¥ÑÔºö|$)/u', $summaryMessage->message, $matches);
                                            $title = $matches[1] ?? '';
                                        }
                                        $formattedDate = \Carbon\Carbon::parse($conversation->last_activity_at)->format('mÊúàdÊó•');
                                        echo $title ?: $formattedDate . '„ÅÆÂØæË©±';
                                    @endphp
                                </h5>
                                <button class="edit-button" data-bs-toggle="modal" data-bs-target="#editTitleModal{{ $conversation->id }}" aria-label="Á∑®ÈõÜ">
                                    Ô∏èüñäÔ∏è
                                </button>
                            </div>
                            <button type="button" class="delete-button" data-bs-toggle="modal" data-bs-target="#deleteModal{{ $conversation->id }}" aria-label="ÂâäÈô§">
                                √óÔ∏è
                            </button>
                        </div>
                        <p class="card-text">
                            <i class="fas fa-clock mr-2" style="color: var(--primary-orange);"></i>
                            {{ \Carbon\Carbon::parse($conversation->last_activity_at)->format('YÂπ¥mÊúàdÊó• H:i') }}
                        </p>
                        <p class="card-text">
                            @if($conversation->status === App\Models\Conversation::STATUS_IN_PROGRESS)
                                <span class="badge bg-primary" style="background-color: var(--primary-blue) !important;">ÈÄ≤Ë°å‰∏≠</span>
                            @elseif($conversation->status === App\Models\Conversation::STATUS_COMPLETED)
                                <span class="badge bg-success" style="background-color: var(--primary-green) !important;">ÂÆå‰∫Ü</span>
                            @elseif($conversation->status === App\Models\Conversation::STATUS_CANCELED)
                                <span class="badge bg-cancel" style="background-color: var(--primary-orange) !important;">„Ç≠„É£„É≥„Çª„É´</span>
                            @else
                                <span class="badge bg-secondary">{{ $conversation->status }}</span>
                            @endif
                        </p>
                        <div class="card-actions">
                            <a href="{{ route('conversations.show', $conversation->id) }}" class="btn btn-outline-primary rounded-pill" style="color: var(--primary-blue); border-color: var(--primary-blue);">Ë©≥Á¥∞„ÇíË¶ã„Çã</a>
                            @if($conversation->status === App\Models\Conversation::STATUS_IN_PROGRESS)
                                <a href="{{ route('conversations.listen', $conversation->id) }}" class="gradient-button btn rounded-pill">ÂØæË©±„ÇíÁ∂ö„Åë„Çã</a>
                            @endif
                        </div>
                    </div>
                </div>
            @endforeach
        </div>
    </div>
    @foreach($conversations as $conversation)
    <!-- Á∑®ÈõÜ„É¢„Éº„ÉÄ„É´ -->
    <div class="modal fade" id="editTitleModal{{ $conversation->id }}" tabindex="-1" aria-labelledby="editTitleModalLabel{{ $conversation->id }}" aria-hidden="true">
        <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editTitleModalLabel{{ $conversation->id }}">„Çø„Ç§„Éà„É´„ÅÆÁ∑®ÈõÜ</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="edit-form-{{ $conversation->id }}" onsubmit="updateTitle(event, {{ $conversation->id }})">
                            <div class="mb-3">
                                <label for="new-title-{{ $conversation->id }}" class="form-label">Êñ∞„Åó„ÅÑ„Çø„Ç§„Éà„É´</label>
                                <input type="text" class="form-control" id="new-title-{{ $conversation->id }}" value="{{ $summaryMessage ? ($matches[1] ?? '') : 'ÂØæË©± #' . $conversation->id }}">
                            </div>
                            <div class="text-end">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">„Ç≠„É£„É≥„Çª„É´</button>
                                <button type="submit" class="btn btn-primary">‰øùÂ≠ò</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    <!-- ÂâäÈô§Á¢∫Ë™ç„É¢„Éº„ÉÄ„É´ -->
    <div class="modal fade" id="deleteModal{{ $conversation->id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ $conversation->id }}" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel{{ $conversation->id }}">ÂâäÈô§Á¢∫Ë™ç</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Êú¨ÂΩì„Å´„Åì„ÅÆÂØæË©±„ÇíÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">„Ç≠„É£„É≥„Çª„É´</button>
                    <form action="{{ route('conversations.destroy', $conversation->id) }}" method="POST">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="btn btn-danger">ÂâäÈô§</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    @endforeach
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // „É≠„Ç∞„Ç§„É≥„Çπ„Éà„É™„Éº„ÇØ„ÅÆÊõ¥Êñ∞Âá¶ÁêÜ
    fetch('{{ route("update.login.streak") }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.getElementById('loginStreak').textContent = data.loginStreak;
        } else {
            console.log(data.message || '„É≠„Ç∞„Ç§„É≥„Çπ„Éà„É™„Éº„ÇØ„ÅÆÊõ¥Êñ∞„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ');
    });
    //„ÄÄ„É¢„Éº„Çø„É´Ëµ∑Âãï
    var editModals = document.querySelectorAll('[id^="editTitleModal"]');
        editModals.forEach(function(modal) {
            modal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var conversationId = button.closest('.card').querySelector('[id^="title-"]').id.split('-')[1];
                var currentTitle = document.getElementById('title-' + conversationId).textContent.trim();
                document.getElementById('new-title-' + conversationId).value = currentTitle;
            });
        });
    // „Çø„Ç§„Éà„É´Á∑®ÈõÜÊ©üËÉΩ
    function updateTitle(event, id) {
        event.preventDefault();
        var newTitle = document.getElementById('new-title-' + id).value;

        fetch('{{ route("conversations.updateTitle", ":id") }}'.replace(':id', id), {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ title: newTitle })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('HTTP status ' + response.status);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                document.getElementById('title-' + id).textContent = newTitle;
                var modal = bootstrap.Modal.getInstance(document.getElementById('editTitleModal' + id));
                modal.hide();
            } else {
                alert('„Çø„Ç§„Éà„É´„ÅÆÊõ¥Êñ∞„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ' + error.message);
        });
    }
    function updateOasisImage(points) {
        const oasisImages = document.querySelectorAll('.oasis-image');
        oasisImages.forEach(img => img.classList.add('hidden'));

        if (points < 100) {
            document.getElementById('oasis-level1').classList.remove('hidden');
        } else if (points < 200) {
            document.getElementById('oasis-level2').classList.remove('hidden');
        } else if (points < 500) {
            document.getElementById('oasis-level3').classList.remove('hidden');
        } else {
            document.getElementById('oasis-level4').classList.remove('hidden');
        }
    }
    updateOasisImage({{ $user->points ?? 0 }});

    // „Éï„Ç©„Éº„É†„ÅÆsubmit„Ç§„Éô„É≥„Éà„É™„Çπ„Éä„Éº„ÇíË®≠ÂÆö
    document.querySelectorAll('[id^="edit-form-"]').forEach(function(form) {
        form.addEventListener('submit', function(event) {
            var id = this.id.split('-')[2];
            updateTitle(event, id);
        });
    });

    // „É≠„Ç∞„Ç§„É≥„Éú„Éº„Éä„ÇπÊ©üËÉΩ
    var loginBonusBtn = document.getElementById('loginBonusBtn');
    if (loginBonusBtn) {
        loginBonusBtn.addEventListener('click', function() {
            fetch('{{ route("login.bonus") }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('„É≠„Ç∞„Ç§„É≥„Éú„Éº„Éä„Çπ10pt„ÇíÁç≤Âæó„Åó„Åæ„Åó„ÅüÔºÅ');
                    document.getElementById('totalPoints').textContent = data.totalPoints;
                    document.getElementById('loginStreak').textContent = data.loginStreak;
                    updateOasisImage(data.totalPoints);
                    this.disabled = true;
                } else {
                    alert(data.message || 'Êú¨Êó•„ÅÆ„É≠„Ç∞„Ç§„É≥„Éú„Éº„Éä„Çπ„ÅØÊó¢„Å´Áç≤ÂæóÊ∏à„Åø„Åß„Åô„ÄÇ');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ');
            });
        });
    }
});
</script>
@endsection
